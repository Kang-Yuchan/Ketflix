{"version":3,"sources":["assets/default.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/ErrorMessage.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","Conatiner","Loader_templateObject","Loader","role","aria-label","ErrorMessage_templateObject","Text","ErrorMessage_templateObject2","color","ErrorMessage","text","ErrorMessage_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_ErrorMessage","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","TVContainer","TV_TVPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","Search","TV","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,i8BCIxC,IAAMC,EAASC,UAAOC,OAAVC,KAaNC,EAAOH,UAAOI,GAAVC,KAKJC,EAAON,UAAOO,GAAVC,IAKA,SAAAC,GAAK,OAAIA,EAAMC,QAAU,UAAY,gBAIzCC,EAAQX,kBAAOY,IAAPZ,CAAHa,KAOIC,cAAW,SAAAC,GAAA,IAAeC,EAAfD,EAAGE,SAAYD,SAAf,OACtBE,EAAAC,EAAAC,cAACrB,EAAD,KACImB,EAAAC,EAAAC,cAACjB,EAAD,KACIe,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,MAAbM,GACXE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,KAAV,uBAEJH,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,QAAbM,GACXE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,OAAV,mBAEJH,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,YAAbM,GACXE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,WAAV,meC5ChB,IAAMC,EAAYtB,UAAOuB,IAAVC,KAMTC,EAAQzB,UAAO0B,KAAVC,KAKLC,EAAO5B,UAAOuB,IAAVM,KAsBKC,EAfC,SAAAf,GAAA,IAAEgB,EAAFhB,EAAEgB,MAAOC,EAATjB,EAASiB,SAAT,OACZd,EAAAC,EAAAC,cAACE,EAAD,KACIJ,EAAAC,EAAAC,cAACK,EAAD,KAAQM,GACRb,EAAAC,EAAAC,cAACQ,EAAD,KAAOI,mOCtBf,IAAMC,EAAYjC,UAAOuB,IAAVW,KASAC,EAAA,kBACXjB,EAAAC,EAAAC,cAACa,EAAD,KACIf,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,MAAMC,aAAW,WAA5B,gPCVR,IAAMf,EAAYtB,UAAOuB,IAAVe,KAQTC,EAAOvC,UAAO0B,KAAVc,IACG,SAAA/B,GAAK,OAAIA,EAAMgC,QAebC,EAXM,SAAA3B,GAAA,IAAE4B,EAAF5B,EAAE4B,KAAMF,EAAR1B,EAAQ0B,MAAR,OACjBvB,EAAAC,EAAAC,cAACwB,EAAD,KACI1B,EAAAC,EAAAC,cAACmB,EAAD,CAAME,MAAOA,GAAQE,0/BCd7B,IAAMrB,EAAYtB,UAAOuB,IAAVsB,KAITC,EAAQ9C,UAAOuB,IAAVwB,IACiB,SAAAtC,GAAK,OAAIA,EAAMuC,QAQrCC,EAASjD,UAAO0B,KAAVwB,KAONC,GAAiBnD,UAAOuB,IAAV6B,IAIVN,EAGAG,GAOJxB,GAAQzB,UAAO0B,KAAV2B,KAMLC,GAAOtD,UAAO0B,KAAV6B,KAmCKC,GA7BA,SAAAzC,GAAA,IAAE0C,EAAF1C,EAAE0C,GAAIC,EAAN3C,EAAM2C,SAAU3B,EAAhBhB,EAAgBgB,MAAO4B,EAAvB5C,EAAuB4C,OAAQC,EAA/B7C,EAA+B6C,KAA/BC,EAAA9C,EAAqC+C,eAArC,IAAAD,KAAA,OACX3C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAM1C,GAAIyC,EAAO,UAAAE,OAAaP,GAAb,SAAAO,OAA6BP,IAC1CvC,EAAAC,EAAAC,cAAC6C,EAAD,KACI/C,EAAAC,EAAAC,cAAC+B,GAAD,KACAjC,EAAAC,EAAAC,cAAC0B,EAAD,CAAOE,MAAOU,EAAQ,kCAAAM,OAAoCN,GAAYQ,EAAQ,MAC1EhD,EAAAC,EAAAC,cAAC6B,EAAD,KACI/B,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,MAAMC,aAAW,UAA5B,gBAEQ,IACPsB,EAJL,QAOJzC,EAAAC,EAAAC,cAAC+C,GAAD,KACKpC,EAAMqC,OAAS,GAAf,GAAAJ,OAAuBjC,EAAMsC,UAAU,EAAG,IAA1C,OAAqDtC,GAE1Db,EAAAC,EAAAC,cAACkC,GAAD,KAAOM,iGCzDnB,IAAMtC,GAAYtB,UAAOuB,IAAV+C,MA2EAC,GAvEO,SAAAxD,GAAA,IAAGyD,EAAHzD,EAAGyD,WAAYC,EAAf1D,EAAe0D,QAASC,EAAxB3D,EAAwB2D,SAAUC,EAAlC5D,EAAkC4D,QAASC,EAA3C7D,EAA2C6D,MAA3C,OAClB1D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACE3D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACED,EAAAC,EAAAC,cAAA,kCAEDuD,EACCzD,EAAAC,EAAAC,cAACe,EAAD,MAEAjB,EAAAC,EAAAC,cAAC2D,GAAD,KACE7D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACED,EAAAC,EAAAC,cAAA,kCAEDoD,GAAcA,EAAWJ,OAAS,GACjClD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,eACZyC,EAAWS,IAAI,SAAAC,GAAK,OACnBhE,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKF,EAAMzB,GACXA,GAAIyB,EAAMzB,GACVC,SAAUwB,EAAMG,YAChBtD,MAAOmD,EAAMI,eACb3B,OAAQuB,EAAMK,aACd3B,KAAMsB,EAAMM,aAAanB,UAAU,EAAG,GACtCP,SAAS,OAKhBY,GAAYA,EAASN,OAAS,GAC7BlD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,mBACZ2C,EAASO,IAAI,SAAAC,GAAK,OACjBhE,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKF,EAAMzB,GACXA,GAAIyB,EAAMzB,GACVC,SAAUwB,EAAMG,YAChBtD,MAAOmD,EAAMI,eACb3B,OAAQuB,EAAMK,aACd3B,KAAMsB,EAAMM,aAAanB,UAAU,EAAG,GACtCP,SAAS,OAKhBW,GAAWA,EAAQL,OAAS,GAC3BlD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,kBACZ0C,EAAQQ,IAAI,SAAAC,GAAK,OAChBhE,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKF,EAAMzB,GACXA,GAAIyB,EAAMzB,GACVC,SAAUwB,EAAMG,YAChBtD,MAAOmD,EAAMI,eACb3B,OAAQuB,EAAMK,aACd3B,KAAMsB,EAAMM,aAAanB,UAAU,EAAG,GACtCP,SAAS,OAKhBc,GAAS1D,EAAAC,EAAAC,cAACqE,EAAD,CAAShD,MAAM,UAAUE,KAAMiC,gBCpE7Cc,WAAMC,EAAMC,OAAO,CACrBC,QAAQ,gCACRC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAKLC,GAAY,CACrBzB,WAAY,kBAAMkB,GAAIQ,IAAI,sBAC1BxB,SAAU,kBAAMgB,GAAIQ,IAAI,mBACxBzB,QAAS,kBAAMiB,GAAIQ,IAAI,kBACvBC,YAAa,SAAA1C,GAAE,OACXiC,GAAIQ,IAAJ,SAAAlC,OAAiBP,GAAM,CACnBqC,OAAQ,CACJM,mBAAoB,aAGhCC,OAAQ,SAAAC,GAAI,OACRZ,GAAIQ,IAAI,eAAgB,CACpBJ,OAAQ,CACJS,MAAOC,mBAAmBF,QAK7BG,GAAQ,CACjBC,SAAU,kBAAMhB,GAAIQ,IAAI,iBACxBzB,QAAS,kBAAMiB,GAAIQ,IAAI,eACvBS,YAAa,kBAAMjB,GAAIQ,IAAI,oBAC3BU,WAAY,SAAAnD,GAAE,OACViC,GAAIQ,IAAJ,MAAAlC,OAAcP,GAAM,CAChBqC,OAAQ,CACJM,mBAAoB,aAGhCC,OAAQ,SAAAC,GAAI,OACRZ,GAAIQ,IAAI,YAAa,CACjBJ,OAAQ,CACJS,MAAOC,mBAAmBF,QCxC3BO,8MCGXC,MAAQ,CACJtC,WAAY,KACZE,SAAU,KACVD,QAAS,KACTG,MAAO,KACPD,SAAS,uOAOKsB,GAAUzB,oCADCA,IAAjBuC,KAAQC,iBAIFf,GAAUvB,kCADCA,IAAjBqC,KAAQC,kBAIFf,GAAUxB,2BADCA,IAAjBsC,KAAQC,QAEZC,KAAKC,SAAS,CACV1C,aACAE,WACAD,8DAGJwC,KAAKC,SAAS,CACVtC,MAAO,0IAGXqC,KAAKC,SAAS,CACVvC,SAAS,oKAKZ,IAAAwC,EACoDF,KAAKH,MAAtDtC,EADH2C,EACG3C,WAAYE,EADfyC,EACezC,SAAUD,EADzB0C,EACyB1C,QAASG,EADlCuC,EACkCvC,MAAOD,EADzCwC,EACyCxC,QAC9C,OACIzD,EAAAC,EAAAC,cAACgG,GAAD,CACI5C,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTG,MAAOA,EACPD,QAASA,WA5CI0C,IAAMC,mVCKnC,IAAMhG,GAAYtB,UAAOuB,IAAVgG,MAITC,GAAOxH,UAAOyH,KAAVC,MAKJC,GAAQ3H,UAAO4H,MAAVC,MAiFIC,GA3ES,SAAA/G,GAAA,IACtBgH,EADsBhH,EACtBgH,aACAC,EAFsBjH,EAEtBiH,UACArD,EAHsB5D,EAGtB4D,QACAsD,EAJsBlH,EAItBkH,WACAC,EALsBnH,EAKtBmH,aACAtD,EANsB7D,EAMtB6D,MACAuD,EAPsBpH,EAOtBoH,WAPsB,OAStBjH,EAAAC,EAAAC,cAACgH,GAAD,KACElH,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACED,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAACoG,GAAD,CAAMa,SAAUH,GACdhH,EAAAC,EAAAC,cAACuG,GAAD,CACEW,YAAY,+BACZC,MAAON,EACPO,SAAUL,KAGbxD,EACCzD,EAAAC,EAAAC,cAACe,EAAD,MAEAjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACGkD,GAAgBA,EAAa3D,OAAS,GACrClD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,iBACZgG,EAAa9C,IAAI,SAAAC,GAAK,OACrBhE,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKF,EAAMzB,GACXA,GAAIyB,EAAMzB,GACVC,SAAUwB,EAAMG,YAChBtD,MAAOmD,EAAMI,eACb3B,OAAQuB,EAAMK,aACd3B,KAAMsB,EAAMM,aAAanB,UAAU,EAAG,GACtCP,SAAS,OAKhBkE,GAAaA,EAAU5D,OAAS,GAC/BlD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,mBACZiG,EAAU/C,IAAI,SAAAwD,GAAI,OACjBvH,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKqD,EAAKhF,GACVA,GAAIgF,EAAKhF,GACTC,SAAU+E,EAAKpD,YACftD,MAAO0G,EAAKC,cACZ/E,OAAQ8E,EAAKlD,aACb3B,KAAM6E,EAAKE,eAAetE,UAAU,EAAG,QAK9CO,GAAS1D,EAAAC,EAAAC,cAACqE,EAAD,CAAShD,MAAM,UAAUE,KAAMiC,IACxCoD,GACCD,GACqB,IAArBC,EAAU5D,QACc,IAAxB2D,EAAa3D,QACXlD,EAAAC,EAAAC,cAACqE,EAAD,CAAS9C,KAAK,iFAAgBF,MAAM,eChFjCmG,8MCGb9B,MAAQ,CACNiB,aAAc,KACdC,UAAW,KACXC,WAAY,GACZtD,SAAS,EACTC,MAAO,QAGTsD,aAAe,SAAAW,GACbA,EAAMC,iBAEa,KADIC,EAAKjC,MAApBmB,YAENc,EAAKC,kBAITb,WAAa,SAAAU,GAAS,IAERN,EACRM,EADFI,OAAUV,MAEZQ,EAAK7B,SAAS,CACZe,WAAYM,OAIhBS,kCAAe,SAAAE,IAAA,IAAAjB,EAAAkB,EAAApB,EAAAqB,EAAApB,EAAA,OAAAqB,EAAAlI,EAAAmI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLxB,EAAec,EAAKjC,MAApBmB,WACRc,EAAK7B,SAAS,CAAEvC,SAAS,IAFZ4E,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMDxD,GAAUI,OAAO4B,GANhB,cAAAkB,EAAAI,EAAAG,KAKQ3B,EALRoB,EAKTpC,KAAQC,QALCuC,EAAAE,KAAA,EASDhD,GAAMJ,OAAO4B,GATZ,OAAAmB,EAAAG,EAAAG,KAQQ1B,EARRoB,EAQTrC,KAAQC,QAEV+B,EAAK7B,SAAS,CACZa,eACAC,cAZSuB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAeXR,EAAK7B,SAAS,CAAEtC,MAAO,+FAfZ,eAAA2E,EAAAC,KAAA,GAiBXT,EAAK7B,SAAS,CAAEvC,SAAS,IAjBd4E,EAAAK,OAAA,6BAAAL,EAAAM,SAAAX,EAAA,gGAqBN,IAAA/B,EACyDF,KAAKH,MAA7DiB,EADDZ,EACCY,aAAcC,EADfb,EACea,UAAWC,EAD1Bd,EAC0Bc,WAAYtD,EADtCwC,EACsCxC,QAASC,EAD/CuC,EAC+CvC,MACtD,OACE1D,EAAAC,EAAAC,cAAC0I,GAAD,CACE/B,aAAcA,EACdC,UAAWA,EACXrD,QAASA,EACTC,MAAOA,EACPqD,WAAYA,EACZC,aAAcjB,KAAKiB,aACnBC,WAAYlB,KAAKkB,oBAzDId,IAAMC,wGCMnC,IAAMhG,GAAYtB,UAAOuB,IAAVwI,MAqEAC,GAjEK,SAAAjJ,GAAA,IAAG2F,EAAH3F,EAAG2F,SAAUjC,EAAb1D,EAAa0D,QAASkC,EAAtB5F,EAAsB4F,YAAahC,EAAnC5D,EAAmC4D,QAASC,EAA5C7D,EAA4C6D,MAA5C,OAChB1D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACE3D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACED,EAAAC,EAAAC,cAAA,oCAEDuD,EACCzD,EAAAC,EAAAC,cAACe,EAAD,MAEAjB,EAAAC,EAAAC,cAAC6I,GAAD,KACGvD,GAAYA,EAAStC,OAAS,GAC7BlD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,mBACZ2E,EAASzB,IAAI,SAAAwD,GAAI,OAChBvH,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKqD,EAAKhF,GACVA,GAAIgF,EAAKhF,GACTC,SAAU+E,EAAKpD,YACftD,MAAO0G,EAAKC,cACZ/E,OAAQ8E,EAAKlD,aACb3B,KAAM6E,EAAKE,eAAetE,UAAU,EAAG,QAK9CI,GAAWA,EAAQL,OAAS,GAC3BlD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,iBACZ0C,EAAQQ,IAAI,SAAAwD,GAAI,OACfvH,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKqD,EAAKhF,GACVA,GAAIgF,EAAKhF,GACTC,SAAU+E,EAAKpD,YACftD,MAAO0G,EAAKC,cACZ/E,OAAQ8E,EAAKlD,aACb3B,KAAM6E,EAAKE,eAAetE,UAAU,EAAG,QAK9CsC,GAAeA,EAAYvC,OAAS,GACnClD,EAAAC,EAAAC,cAAC4D,EAAD,CAASjD,MAAM,gBACZ4E,EAAY1B,IAAI,SAAAwD,GAAI,OACnBvH,EAAAC,EAAAC,cAAC+D,GAAD,CACEC,IAAKqD,EAAKhF,GACVA,GAAIgF,EAAKhF,GACTC,SAAU+E,EAAKpD,YACftD,MAAO0G,EAAKC,cACZ/E,OAAQ8E,EAAKlD,aACb3B,KAAM6E,EAAKE,eAAetE,UAAU,EAAG,QAK9CO,GAAS1D,EAAAC,EAAAC,cAACqE,EAAD,CAAShD,MAAM,UAAUE,KAAMiC,OC/DpCsF,8MCIXpD,MAAQ,CACJJ,SAAU,KACVjC,QAAS,KACTkC,YAAa,KACb/B,MAAO,KACPD,SAAS,uOAOK8B,GAAMC,kCADKA,IAAjBK,KAAQC,iBAIFP,GAAME,qCADKA,IAAjBI,KAAQC,kBAIFP,GAAMhC,2BADKA,IAAjBsC,KAAQC,QAEZC,KAAKC,SAAS,CACVR,WACAC,cACAlC,8DAGJwC,KAAKC,SAAS,CACVtC,MAAO,gIAGXqC,KAAKC,SAAS,CACVvC,SAAS,oKAKX,IAAAwC,EACmDF,KAAKH,MAAvDJ,EADDS,EACCT,SAAUjC,EADX0C,EACW1C,QAASkC,EADpBQ,EACoBR,YAAa/B,EADjCuC,EACiCvC,MAAOD,EADxCwC,EACwCxC,QAC9C,OACAzD,EAAAC,EAAAC,cAAC+I,GAAD,CACIzD,SAAUA,EACVjC,QAASA,EACTkC,YAAaA,EACb/B,MAAOA,EACPD,QAASA,WA5CQ0C,IAAMC,8+CCCnC,IAAMhG,GAAYtB,UAAOuB,IAAV6I,MAOTC,GAAWrK,UAAOuB,IAAV+I,KAMc,SAAA7J,GAAK,OAAIA,EAAM8J,UASrCC,GAAUxK,UAAOuB,IAAVkJ,MAQPC,GAAQ1K,UAAOuB,IAAVoJ,KAEiB,SAAAlK,GAAK,OAAIA,EAAM8J,UAMrCK,GAAO5K,UAAOuB,IAAVsJ,MAKHpJ,GAAQzB,UAAO8K,GAAVC,MAILC,GAAgBhL,UAAOuB,IAAV0J,MAIb3K,GAAON,UAAO0B,KAAVwJ,MAEJC,GAAUnL,UAAO0B,KAAV0J,MAIPC,GAAWrL,UAAOF,EAAVwL,MAyEAC,GAjES,SAAAxK,GAAA,IAAGyK,EAAHzK,EAAGyK,OAAQ7G,EAAX5D,EAAW4D,QAAX5D,EAAoB6D,MAApB,OACtBD,EACEzD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACI3D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACQD,EAAAC,EAAAC,cAAA,mCAERF,EAAAC,EAAAC,cAACe,EAAD,OAGJjB,EAAAC,EAAAC,cAACqK,GAAD,KACIvK,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACAD,EAAAC,EAAAC,cAAA,aACGoK,EAAOlG,eAAiBkG,EAAOlG,eAAiBkG,EAAO9C,cAAe,IADzE,cAKFxH,EAAAC,EAAAC,cAACiJ,GAAD,CACEE,QAAO,sCAAAvG,OAAwCwH,EAAOE,iBAExDxK,EAAAC,EAAAC,cAACoJ,GAAD,KACEtJ,EAAAC,EAAAC,cAACsJ,GAAD,CACEH,QACEiB,EAAOnG,YAAP,sCAAArB,OAC0CwH,EAAOnG,aAC7CnB,EAAQ,MAGhBhD,EAAAC,EAAAC,cAACwJ,GAAD,KACE1J,EAAAC,EAAAC,cAACuK,GAAD,KACGH,EAAOlG,eACJkG,EAAOlG,eACPkG,EAAO9C,eAEbxH,EAAAC,EAAAC,cAAC4J,GAAD,KACE9J,EAAAC,EAAAC,cAACwK,GAAD,KACGJ,EAAOhG,aACJgG,EAAOhG,aAAanB,UAAU,EAAG,GACjCmH,EAAO7C,eAAetE,UAAU,EAAG,IAEzCnD,EAAAC,EAAAC,cAAC+J,GAAD,eACAjK,EAAAC,EAAAC,cAACwK,GAAD,KACGJ,EAAOK,QAAUL,EAAOK,QAAUL,EAAOM,iBAAiB,GAD7D,QAGA5K,EAAAC,EAAAC,cAAC+J,GAAD,eACAjK,EAAAC,EAAAC,cAACwK,GAAD,KACGJ,EAAOO,QACNP,EAAOO,OAAO9G,IAAI,SAAC+G,EAAOC,GAAR,OAChBA,IAAUT,EAAOO,OAAO3H,OAAS,EAC7B4H,EAAME,KADV,GAAAlI,OAEOgI,EAAME,KAFb,WAMRhL,EAAAC,EAAAC,cAACiK,GAAD,KAAWG,EAAOW,cC1HbC,eCIX,SAAAC,EAAY5L,GAAO,IAAAsI,EAAAuD,OAAAC,EAAA,EAAAD,CAAArF,KAAAoF,GACftD,EAAAuD,OAAAE,EAAA,EAAAF,CAAArF,KAAAqF,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAzF,KAAMxG,IADS,IAGCO,EACZP,EADAQ,SAAYD,SAHD,OAKf+H,EAAKjC,MAAQ,CACT0E,OAAQ,KACR5G,MAAO,KACPD,SAAS,EACTb,QAAS9C,EAAS2L,SAAS,YAThB5D,oNAmBX9B,KAAKxG,MAHSgD,IADdmJ,MACI9G,OAAUrC,GAEHoJ,IAAXC,QAAWD,KAEP/I,EAAYmD,KAAKH,MAAjBhD,QACFiJ,EAAWC,SAASvJ,IACvBwJ,MAAMF,4CACEF,EAAK,gBAEZrB,EAAS,eAEN1H,oCAC2BmC,GAAUE,YAAY4G,oBAAvCvB,IAANzE,8CAEuBN,GAAMG,WAAWmG,oBAAlCvB,IAANzE,+DAIPE,KAAKC,SAAS,CAACtC,MAAO,wHAEtBqC,KAAKC,SAAS,CAAEvC,SAAS,EAAO6G,2KAK9B,IAAArE,EAC2BF,KAAKH,MAA/B0E,EADDrE,EACCqE,OAAQ5G,EADTuC,EACSvC,MAAOD,EADhBwC,EACgBxC,QACtB,OACAzD,EAAAC,EAAAC,cAAC8L,GAAD,CACI1B,OAAQA,EACR5G,MAAOA,EACPD,QAASA,WAhDQ0C,IAAMC,WCKpB6F,GAAA,kBACXjM,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACA7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACI3D,EAAAC,EAAAC,cAACgM,EAAD,MACAlM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,KACInM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjCvM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWE,KACvCxM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOC,KAAK,MAAMC,OAAK,EAACC,UAAWG,KACnCzM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWI,KACpC1M,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWI,KACnC1M,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAUQ,KAAK,IAAIxM,GAAG,0fCjBlC,IAkBeyM,GAlBMC,4BAAHC,KACZC,MCYSC,oLAVX,OACAhN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACE3D,EAAAC,EAAAC,cAAC+L,GAAD,MACAjM,EAAAC,EAAAC,cAAC+M,GAAD,cALY7G,aCClB8G,IAASC,OAAOnN,EAAAC,EAAAC,cAACkN,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.f941258b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.5fcc7d93.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header `\n    color: white;\n    position: fixed;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 50px;\n    display:flex;\n    align-items: center;\n    padding:0px 10px;\n    z-index: 10;\n`;\n\nconst List = styled.ul`\n    display:flex;\n   \n`;\n\nconst Item = styled.li `\n    width:80px;\n    height: 50px;\n    text-align:center;\n    border-bottom: 3px solid \n        ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">ホーム</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV番組</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">検索</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 15px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Conatiner = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 32px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Conatiner>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏰\n        </span>\n    </Conatiner>\n);\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\n\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\n\nconst ErrorMessage = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nErrorMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default ErrorMessage;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover{\n        ${Image}{\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\n\nconst Title = styled.span`\n    display: block;\n    font-size: 12px;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false }) =>  (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n            <Image bgUrl={imageUrl ?`https://image.tmdb.org/t/p/w300${imageUrl}`: require(\"../assets/default.png\")} />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        🌟\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 18 ? `${title.substring(0, 15)}...` : title}\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/ErrorMessage\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n    <>\n      <Helmet>\n        <title>Movies | Ketflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          <Helmet>\n            <title>Movies | Ketflix</title>\n          </Helmet>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {nowPlaying.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n              {upcoming.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n              {popular.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL:\"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"6f02fc19c98b10ba11c7d95a3ac0ea7a\",\n        language: \"ja-JP\"\n    }\n});\n\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => \n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term => \n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => \n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term => \n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: nowPlaying }\n            } = await moviesApi.nowPlaying();\n            const {\n                data: { results: upcoming}\n            } = await moviesApi.upcoming();\n            const {\n                data: { results: popular}\n            } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"該当する映画の検索結果がありません。\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\n        return  (\n            <HomePresenter \n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n     }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/ErrorMessage\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Ketflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"検索結果が見つかりません。\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"該当する検索結果がありません。\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/ErrorMessage\";\nimport Helmet from \"react-helmet\";\nimport Poster from \"Components/Poster\";\n\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n      <Helmet>\n        <title>TV Shows | Ketflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n              {topRated.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n              {popular.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today\">\n              {airingToday.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array, \n    popular: PropTypes.array, \n    airingToday: PropTypes.array, \n    error: PropTypes.string, \n    loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated }\n            } = await tvApi.topRated();\n            const {\n                data: { results: airingToday}\n            } = await tvApi.airingToday();\n            const {\n                data: { results: popular}\n            } = await tvApi.popular();\n            this.setState({\n                topRated,\n                airingToday,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"該当するTVの検索結果がありません。\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render () {\n        const {topRated, popular, airingToday, error, loading} = this.state;\n        return  (\n        <TVPresenter \n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            error={error}\n            loading={loading}\n        />\n\n        );\n    }    \n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\n const Title = styled.h3`\n  font-size: 32px;\n`;\n\n const ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\n const Item = styled.span``;\n\n const Divider = styled.span`\n  margin: 0 10px;\n`;\n\n const Overview = styled.p`\n  font-size: 20px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n        <Helmet>\n                <title>Loading | Ketflix</title>\n        </Helmet>\n        <Loader />\n    </>\n  ) : (\n    <Container>\n        <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Ketflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/default.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object, \n    error: PropTypes.string, \n    loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const { \n            match: {\n                params: { id }\n            },\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if(isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n          \n        } catch {\n            this.setState({error: \"該当する検索結果がありません。\"})\n        } finally {\n            this.setState({ loading: false, result });\n        }\n    }\n    \n\n    render () {\n        const {result, error, loading} = this.state;\n        return  (\n        <DetailPresenter \n            result={result}\n            error={error}\n            loading={loading}\n        />\n\n        );\n    }    \n}","import React from \"react\";\nimport {HashRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\"\n\n\n\nexport default () => (\n    <Router>\n    <>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/search\" exact component={Search} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </>\n    </Router>\n);","import {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle `\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:16px;\n        background-color: #000000;\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return  (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}